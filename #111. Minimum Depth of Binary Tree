Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.

Note: A leaf is a node with no children.

Example:

Given binary tree [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
return its minimum depth = 2.

================================================
Java:






================================================
Python:
1. Recursion--52ms BFS when the root node only has one child, the depth should be the depth of its child instead of 1
class Solution:
    def minDepth(self, root: TreeNode) -> int:
        if not root: return 0
        if not root.left and not root.right: return 1
        if not root.left and root.right: 
            return 1+ self.minDepth(root.right)
        if not root.right and root.left:
            return 1+ self.minDepth(root.left)
        
        return 1+min(self.minDepth(root.left), self.minDepth(root.right))

