Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.

Example 1:

Input: 121
Output: true
Example 2:

Input: -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Example 3:

Input: 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
Follow up:

Coud you solve it without converting the integer to a string?

-----------------------------------------------------------------------------------------------------------
Complexity Analysis
Time complexity : O(log10(n)). We divided the input by 10 for every iteration
Space complexity : O(1).

Java:






Python:
1. This problem is really easy with python, and converting int to string -420ms
    def isPalindrome(self, x):
        """
        :type x: int
        :rtype: bool
        """
        if x < 0 or int(str(x)[::-1]) != x:
            return False
        else:
            return True
     
    One line solution: - 612ms
    
    def isPalindrome(self, x):
        return str(x) == str(x)[::-1]
            
2. Solve it withou converting: refer to #7 reverse integer
    def isPalindrome(self,x):
        t = x
        if t < 0 : 
            return False

        rev = 0
        while t != 0 :
            rev = rev* 10 + t%10
            t = t//10

        return True if rev == x else False
