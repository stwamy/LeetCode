Given a string s consists of upper/lower-case alphabets and empty space characters ' ', return the length of last word in the string.

If the last word does not exist, return 0.

Note: A word is defined as a character sequence consists of non-space characters only.

Example:

Input: "Hello World"
Output: 5

============================
Java:
1. Trim the string, and search from the end. -2ms . TC:O(n)
class Solution {
    public int lengthOfLastWord(String s) {
      
        s = s.trim();
        if (s == null || s.length() ==0) return 0;


        int l = s.length();
        for(int i=1; i<l; i++){
            if (s.charAt(l-i)==' ') return i-1;
        }

        return l;  
    }
}


==============================
Python: 
1. the same algorithm as java(1) - 56ms
class Solution:
    def lengthOfLastWord(self, s):
        """
        :type s: str
        :rtype: int
        """
        s = s.rstrip()
        if not s: return 0

        l = len(s)
        for i in range(l,0,-1):
            if s[i-1] == ' ': return l-i

        return l 

2. using inner function helps get faster - 32ms 
class Solution:
    def lengthOfLastWord(self, s):
        """
        :type s: str
        :rtype: int
        """
        words = s.split()

        if not words: return 0

        return len(words[-1])
